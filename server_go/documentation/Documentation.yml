openapi: 3.0.0
info:
  title: Taller Docker API
  version: 1.0
  description: This is a RESTful API for managing users using Docker, Go and Postgres.
servers:
  - url: http://localhost:8080/api
paths:
  /login:
    post:
      summary: Logs in a user
      description: Logs in a user with provided credentials and returns a JWT token.
      tags:
        - login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: JWT token
          content:
            text/plain:
              schema:
                type: string
  /users:
    post:
      summary: Add a new user
      description: Adds a new user to the system.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      summary: Get all users
      description: Retrieves a list of all users.
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get user by ID
      description: Retrieves a user by their ID.
      tags:
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update user
      description: Updates a user's information.
      tags:
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete user
      description: Deletes a user from the system.
      tags:
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        password:
          type: string
        email:
          type: string
        date:
          type: string
